import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.Date;

/**
 * @author Nicolas Dionne
 *
 */
public class GUI_AjoutLocation extends GUI {
	final JPanel panel1 = new JPanel();
	private JList list1;
	private JButton confirmerButton;
	private JButton annulerButton;

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 */
	public GUI_AjoutLocation(GUI upperMenu) {
		boolean abort = false;
		this.upperMenu = upperMenu;
		// Initialisation de la JList
		abort = !JListInitilisation();
		//L'utilisateur indique surement qu'il veut annuler l'ajout d'une location
		if(abort)
			//On interompe la création de l'interface
			return ;
		// Initialisation des variables
		frame = new JFrame("Formulaire ajout client");
		

		// JFrame initialisation
		frame.setContentPane(panel1);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.pack();
		frame.setVisible(true);
		frame.setSize(400, 300);
		panel1.setLayout(new BorderLayout(0, 0));
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new BorderLayout(0, 0));
		panel1.add(panel2, BorderLayout.WEST);
		final JScrollPane scrollPane1 = new JScrollPane();
		panel2.add(scrollPane1, BorderLayout.CENTER);
		scrollPane1.setViewportView(list1);
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new BorderLayout(0, 0));
		panel1.add(panel3, BorderLayout.EAST);
		annulerButton = new JButton();
		annulerButton.setText("Annuler");
		panel3.add(annulerButton, BorderLayout.SOUTH);
		confirmerButton = new JButton();
		confirmerButton.setText("Confirmer");
		panel1.add(confirmerButton, BorderLayout.SOUTH);
		final JLabel label1 = new JLabel();
		label1.setText("Veuiller selectionner un vehicule");
		panel1.add(label1, BorderLayout.NORTH);

	}
	/**@author Nicolas Dionne
	 * 
	 * Methode ayant pour but d'initialiser la JList afin qu'elle puisse être afficher
	 * @return true si tout c'est bien passer, false si la création doit etre aborter.
	 */
	private boolean JListInitilisation() {

		ArrayList<Vehicule> listVehic;
		boolean toutEstBeau = true;
		int noReser;
		// Tant que l'utilisateur ne veut pas quitter ou qu'il entre de mauvaise réponse
		do {
			noReser = this.inputBoxInt("Veuillez entrer le numero de reservation ", "Ajout Location");
			// On traite l'entrer
			if (noReser == -1)// Si l'utilisateur veut annuler
				{
				this.cancelCreation();
				return false;
				}
				
			else {
				// On va fetch la liste des vehicule par le registre
				listVehic = RegistreLocation.SaisiNoReservation(noReser);

				// Si elle n'est pas nulle
				if (listVehic != null) {
					// On la transforme pour la JList
					String[] tab = new String[listVehic.size()];
					// Petit formatage pour la JList precisement
					for (int i = 0; i < listVehic.size(); i++)
						tab[i] = listVehic.get(i).getCategorie() + " " + listVehic.get(i).getKilometrage()
								+ listVehic.get(i).getDate();
					list1 = new JList(tab);
				}
				// Sinon, On affiche l'erreur et on recommence
				else
				{
					toutEstBeau = false;
					showMessage("Une erreur c'est produit nous avons pas pu trouver votre \n réservation avec le numéro de réservation entrer", "Message d'erreur");
				}
					

			}
		} while (!toutEstBeau);
		return toutEstBeau;

	}
}
